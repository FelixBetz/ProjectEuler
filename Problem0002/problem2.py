"""
Problem 2: https://projecteuler.net/problem=2
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
"""


def solve_problem2():
    """solve problem 2"""
    even_fibbonacci_terms = set()

    num1 = 1
    num2 = 2

    # add 2 to set
    even_fibbonacci_terms.add(num2)
    while True:
        tmp = num1 + num2

        if tmp >= 4000000:
            break
        if tmp % 2 == 0:
            even_fibbonacci_terms.add(tmp)

        num1 = num2
        num2 = tmp

    # calculate multiple sum
    term_sum = 0
    for term in even_fibbonacci_terms:
        term_sum += term
    return term_sum


print("sum:", solve_problem2())
