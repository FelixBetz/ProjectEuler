"""
Problem 44 https://projecteuler.net/problem=44

Pentagonal numbers are generated by the formula, P_n=n(3n-1)/2. 
The first ten pentagonal numbers are:
1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P_4 + P_7 = 22 + 70 = 92 = P_8.
However, their difference, 70 - 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, P_j and P_k, 
for which their sum and difference are pentagonal and D = |P_k - P_j| is minimised;
what is the value of D?
"""

import math


def get_nth_pentagonal_number(n):
    """check if given number has substring property"""
    return int(n * (3 * n - 1) / 2)


def is_pentagonal_numer(n):
    """check if it is a pentagonal number"""
    return ((1 + math.sqrt(1 + 24 * n)) / 6).is_integer()


def solve_problem44():
    """solve problem 44"""
    pentagonal_numbes = set()
    n = 1
    while True:
        current_pentagonal = get_nth_pentagonal_number(n)

        for p in pentagonal_numbes:
            loc_diff = current_pentagonal - p
            loc_sum = p + current_pentagonal
            if is_pentagonal_numer(loc_sum) and is_pentagonal_numer(loc_diff):
                return loc_diff
        pentagonal_numbes.add(current_pentagonal)
        n += 1


print("value:", solve_problem44())
